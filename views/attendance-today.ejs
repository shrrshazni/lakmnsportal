<%- include('partials/private-header.ejs') %>

<div class="mb-6">
  <div class="mb-6">
    <h2>Attendance Today</h2>
    <p class="text-body-tertiary lh-sm mb-0">High, everyone present, no absences</p>
  </div>


  <div class="mx-n4 px-4 mx-lg-n6 px-lg-6 bg-body-emphasis pt-7 pb-3 border-y mb-6">

    <div class="row align-items-end justify-content-between pb-4 g-3 mb-4">
      <div class="col-auto">
        <h3><%= user.department %></h3>
        <p class="text-body-tertiary lh-sm mb-0"><%= user.section %></p>
      </div>

      <div class="col-12 col-md-auto">
        <div class="search-box">
          <form class="position-relative">
            <input class="form-control search-input search form-control-sm" type="search" id="new-search-input" placeholder="Search attendees" aria-label="Search" />
            <span class="fas fa-search search-box-icon"></span>
          </form>
        </div>
      </div>

    </div>

    <div class="px-0 px-md-4 mb-6">

      <div class="row justify-content-between mb-6">
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-4 pb-xxl-0 "><span class="uil fs-5 lh-1 fa-solid fa-user text-primary"></span>
          <h1 class="fs-5 pt-3" id="totalStaff"></h1>
          <p class="fs-9 mb-0">Total Member Staffs</p>
        </div>
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-4 pb-xxl-0"><span class="uil fs-5 lh-1 fa-solid fa-check text-info"></span>
          <h1 class="fs-5 pt-3" id="totalPresent"></h1>
          <p class="fs-9 mb-0">Total Present</p>
        </div>
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-4 pb-xxl-0 pt-4 pt-md-0"><span class="uil fs-5 lh-1 fa-solid fa-xmark text-danger"></span>
          <h1 class="fs-5 pt-3" id="totalAbsent"></h1>
          <p class="fs-9 mb-0">Total Absent</p>
        </div>
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-4 pb-xxl-0 pt-4 pt-xxl-0"><span class="uil fs-5 lh-1 fa-solid fa-circle-exclamation text-warning"></span>
          <h1 class="fs-5 pt-3" id="totalLate"></h1>
          <p class="fs-9 mb-0">Total Late</p>
        </div>
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-md-4 pb-xxl-0 pt-4 pt-xxl-0"><span class="uil fs-5 lh-1 fa-solid fa-triangle-exclamation text-success"></span>
          <h1 class="fs-5 pt-3" id="totalInvalid"></h1>
          <p class="fs-9 mb-0">Total Invalid</p>
        </div>
        <div class="col-6 col-md-4 col-xxl-2 text-center pb-md-4 pb-xxl-0 pt-4 pt-xxl-0"><span class="uil fs-5 lh-1 fa-solid fa-calendar-minus text-primary"></span>
          <h1 class="fs-5 pt-3" id="totalLeave"></h1>
          <p class="fs-9 mb-0">Total Leave</p>
        </div>

      </div>

    </div>

    <div class="mb-3">
      <div id="attendance-container">

        <div class="table-responsive ms-n1 ps-1 scrollbar">
          <table class="table fs-9 mb-0 border-top border-translucent">
            <thead style="pointer-events: none;">
              <tr>
                <th class="sort white-space-nowrap align-middle ps-0" scope="col" style="width:15%;">STAFF</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:15%;">DEPARTMENT</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:15%;">SECTION</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:10%;">STATUS</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:10%;">TYPE</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:15%;">CLOCK IN</th>
                <th class="sort align-middle text-center ps-0" scope="col" style="width:15%;">CLOCK OUT</th>
              </tr>
            </thead>
            <tbody class="list" id="new-attendance-body"></tbody>
          </table>
        </div>

        <div class="row align-items-center justify-content-center py-2 pe-0 fs-9 mt-3">
          <div class="col-auto d-flex">
            <button class="page-link" id="new-prev-page"><span class="fas fa-chevron-left"></span></button>
            <ul class="mb-0 pagination" id="new-pagination"></ul>
            <button class="page-link pe-0" id="new-next-page"><span class="fas fa-chevron-right"></span></button>
          </div>
        </div>
      </div>

      <script>
        document.addEventListener('DOMContentLoaded', function() {
          const searchInput = document.getElementById('new-search-input');
          const prevPageButton2 = document.getElementById('new-prev-page');
          const nextPageButton2 = document.getElementById('new-next-page');
          const paginationContainer = document.getElementById('new-pagination');
          const dataContainer = document.getElementById('new-attendance-body');
          let currentPage = 1;

          // Function to fetch attendance data with pagination and search query
          function fetchAttendanceData(page, searchQuery) {
            fetch(`/api/data/all-attendance/today/hod?page=${page}&search=${searchQuery}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .then(response => response.json())
              .then(data => {
                renderAttendanceTable(data.data1);
                updateNewPagination(data.data2.length, 10);
                updateCounts(data.counts);
              })
              .catch(error => {
                console.error('Error:', error);
              });
          }

          // Function to update the pagination buttons
          function updateNewPagination(totalItems, limit) {
            const totalPages = Math.ceil(totalItems / limit);
            paginationContainer.innerHTML = '';

            let startPage;
            let endPage;

            if (totalPages <= 3) {
              startPage = 1;
              endPage = totalPages;
            } else if (currentPage === 1) {
              startPage = 1;
              endPage = 3;
            } else if (currentPage === 2) {
              startPage = 1;
              endPage = 4;
            } else if (currentPage >= totalPages - 1) {
              endPage = totalPages;
              startPage = Math.max(1, endPage - 4);
            } else {
              startPage = currentPage - 2;
              endPage = currentPage + 2;
            }

            if (startPage !== 1) {
              const prevEllipsisButton = document.createElement('button');
              prevEllipsisButton.textContent = '...';
              prevEllipsisButton.classList.add('btn', 'pagination-button', 'mx-0', 'px-3', 'fs-10', 'border-0');
              prevEllipsisButton.disabled = true;
              paginationContainer.appendChild(prevEllipsisButton);
            }

            for (let page = startPage; page <= endPage; page++) {
              const paginationButton = document.createElement('button');
              paginationButton.textContent = page;
              paginationButton.classList.add('btn', 'pagination-button', 'mx-0', 'px-3', 'fs-10');

              if (page === currentPage) {
                paginationButton.classList.add('btn-primary');
              } else {
                paginationButton.classList.remove('btn-primary');
              }

              paginationButton.addEventListener('click', () => {
                currentPage = page;
                fetchAttendanceData(currentPage, searchInput.value);
              });

              paginationContainer.appendChild(paginationButton);
            }

            if (endPage < totalPages) {
              const nextEllipsisButton = document.createElement('button');
              nextEllipsisButton.textContent = '...';
              nextEllipsisButton.classList.add('btn', 'pagination-button', 'mx-0', 'px-3', 'fs-10', 'border-0');
              nextEllipsisButton.disabled = true;
              paginationContainer.appendChild(nextEllipsisButton);
            }

            // Show or hide prev and next buttons
            prevPageButton2.classList.toggle('d-none', totalPages <= 1);
            nextPageButton2.classList.toggle('d-none', totalPages <= 1);
          }

          // Function to update the counts in the HTML
          function updateCounts(counts) {
            document.getElementById('totalStaff').innerText = counts.total;
            document.getElementById('totalPresent').innerText = counts.present + counts.late;
            document.getElementById('totalAbsent').innerText = counts.absent;
            document.getElementById('totalLate').innerText = counts.late;
            document.getElementById('totalInvalid').innerText = counts.invalid || 0; // Assuming 'invalid' is a count you may calculate
            document.getElementById('totalLeave').innerText = counts.leave;
          }

          // Function to render the attendance table
          function renderAttendanceTable(data) {
            dataContainer.innerHTML = '';

            if (data.length === 0) {
              const row = document.createElement('tr');
              row.innerHTML = `<td class="align-middle text-start">No staff clock in yet</td>`;
            }

            data.forEach(item => {
              var badgeColour;
              if (item.status === 'Late') {
                badgeColour = 'danger';
              } else if (item.status === 'Leave') {
                badgeColour = 'info';
              } else {
                badgeColour = 'success';
              }

              const row = document.createElement('tr');
              row.innerHTML = `
                           <td class="align-middle text-body white-space-nowrap ps-0 staff">
                             <div class="avatar avatar-2xl">
                                 <div class="avatar-name rounded-circle"><span class="fs-8">${item.user ? item.user.username : 'Unknown'}</span></div>
                             </div>
                             <a class="mb-0 ms-3 fw-bold fs-8" href="/staff/details/${item.user._id}">${item.user ? item.user.fullname : 'Unknown'}</a>
                           </td>
                            <td class="align-middle text-center text-body-emphasis">${item.user.department}</td>
                            <td class="align-middle text-center text-body-emphasis">${item.user.section}</td>
                            <td class="align-middle text-center"><span class="badge badge-phoenix badge-phoenix-${badgeColour} fs-10">${item.status}</span></td>
                            <td class="align-middle text-center"><span class="badge badge-phoenix badge-phoenix-info fs-10">${item.type}</span></td>
                            <td class="align-middle text-center"><span class="badge badge-phoenix badge-phoenix-warning fs-10">${item.signInTime ? new Date(item.signInTime).toLocaleTimeString('en-MY', { hour: 'numeric', minute: 'numeric', hour12: true, timeZone: 'Asia/Kuala_Lumpur' } ) : 'Nil'}</span></td>
                            <td class="align-middle text-center"><span class="badge badge-phoenix badge-phoenix-warning fs-10">${item.signOutTime ? new Date(item.signOutTime).toLocaleTimeString('en-MY', { hour: 'numeric', minute: 'numeric', hour12: true, timeZone: 'Asia/Kuala_Lumpur' }) : 'Nil'}</span></td>
                        `;
              dataContainer.appendChild(row);
            });
          }

          // Initial fetch
          fetchAttendanceData(currentPage, '');

          // Event listeners for pagination and search
          searchInput.addEventListener('input', () => {
            currentPage = 1;
            fetchAttendanceData(currentPage, searchInput.value);
          });

          prevPageButton2.addEventListener('click', () => {
            if (currentPage > 1) {
              currentPage--;
              fetchAttendanceData(currentPage, searchInput.value);
            }
          });

          nextPageButton2.addEventListener('click', () => {
            currentPage++;
            fetchAttendanceData(currentPage, searchInput.value);
          });

          setInterval(() => {
            fetchAttendanceData(currentPage, searchInput.value);
          }, 5000);
        });
      </script>

    </div>

  </div>

</div>

<%- include('partials/private-footer.ejs') %>