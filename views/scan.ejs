<%- include('partials/private-header') %>
<div class="mb-3 mt-n3">

  <section class="px-0" id="demo-content">
    <h2 class="title">QR Scanner</h2>
    <p class="mb-5">Scan, decode, interpret, retrieve data quickly.</p>

    <div class="mb-3">
      <button class="btn btn-primary" id="startButton">Start</button>
    </div>

    <div class="mb-3 row g-3">

      <div class="col-12 col-md-6">
        <div class="border border-gray rounded-3 p-4" style="min-height: 25vh;">
          <video id="video" class="w-100"></video>
        </div>
      </div>

      <div class="col-12 col-md-6">
        <label class="form-label fst-italic fw-semibold fs-9"></label>
        <pre><p class="fs-9" id="result"></p></pre>
      </div>

    </div>


  </section>

  <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>

  <script>
    function fetchUserDataFromServer(userId) {
      fetch(`/fetch-user/${userId}`)
        .then(response => response.json())
        .then(user => {
          const userDataElement = document.getElementById('userData');
          if (user) {
            userDataElement.textContent = `User ID: ${user._id}, Username: ${user.username}, Email: ${user.email}`;
          } else {
            userDataElement.textContent = 'User not found';
          }
        })
        .catch(error => {
          console.error('Error fetching user data:', error);
        });
    }

    function decodeOnce(codeReader, selectedDeviceId) {
      codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((result) => {
        console.log(result);
        document.getElementById('result').textContent = result.text;

        // Fetch user data based on the scanned result
        fetchUserDataFromServer(result.text);
      }).catch((err) => {
        console.error(err);
        document.getElementById('result').textContent = err;
      });
    }

    function sendScannedDataToServer(data) {
      fetch('/process-scanned-data', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            scannedData: data
          })
        })
        .then(response => response.json()) // Parse response JSON
        .then(user => {
          // Update UI with user data
          const userDataElement = document.getElementById('userData');
          if (user) {
            userDataElement.textContent = `User ID: ${user._id}, Username: ${user.username}, Email: ${user.email}`;
          } else {
            userDataElement.textContent = 'User not found';
          }
        })
        .catch(error => {
          console.error('Error processing scanned data:', error);
        });
    }

    window.addEventListener('load', function() {
      let codeReader;
      let selectedDeviceId;

      function startScan() {
        codeReader = new ZXing.BrowserQRCodeReader();
        console.log('ZXing code reader initialized');

        // Always decode once, no need for changing video source
        codeReader.getVideoInputDevices().then((videoInputDevices) => {
          if (videoInputDevices.length >= 1) {
            // Find the environment camera if available
            const environmentCamera = videoInputDevices.find(device => device.label.toLowerCase().includes('environment') || device.label.toLowerCase().includes('rear'));
            if (environmentCamera) {
              selectedDeviceId = environmentCamera.deviceId;
            } else {
              selectedDeviceId = videoInputDevices[0].deviceId;
            }
            decodeOnce(codeReader, selectedDeviceId);
          }
        }).catch((err) => {
          console.error(err);
        });
      }

      document.getElementById('startButton').addEventListener('click', () => {
        if (codeReader) {
          codeReader.reset();
          document.getElementById('result').textContent = '';
          startScan();
        } else {
          startScan();
        }
      });
    });
  </script>

</div>
<%- include('partials/private-footer.ejs') %>