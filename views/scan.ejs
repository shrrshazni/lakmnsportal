<%- include('partials/private-header') %>
<div class="mb-3 mt-n3">

    <section class="px-0" id="demo-content">
      <h2 class="title text-center mb-5">User's Attendance</h2>

      <div class="mb-3">
        <button class="btn btn-primary" id="startButton">Start</button>
      </div>

      <div class="mb-3">
        <video id="video" class="border border-gray w-100"></video>
      </div>

      <label class="form-label fst-italic fw-semibold fs-9">Result</label>
      <pre><p class="fs-9" id="result"></p></pre>
    </section>

    <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>

    <script>
      function decodeOnce(codeReader, selectedDeviceId) {
        codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((result) => {
          console.log(result);
          document.getElementById('result').textContent = result.text;

          // Submit result to server
          sendScannedDataToServer(result.text);
        }).catch((err) => {
          console.error(err);
          document.getElementById('result').textContent = err;
        });
      }

      function sendScannedDataToServer(data) {
        fetch('/process-scanned-data', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              scannedData: data,
              id : '<%= user._id %>'
            })
          });
      }

      window.addEventListener('load', function() {
        let codeReader;
        let selectedDeviceId;

        function startScan() {
          codeReader = new ZXing.BrowserQRCodeReader();
          console.log('ZXing code reader initialized');

          // Always decode once, no need for changing video source
          codeReader.getVideoInputDevices().then((videoInputDevices) => {
            if (videoInputDevices.length >= 1) {
              // Find the environment camera if available
              const environmentCamera = videoInputDevices.find(device => device.label.toLowerCase().includes('environment') || device.label.toLowerCase().includes('rear'));
              if (environmentCamera) {
                selectedDeviceId = environmentCamera.deviceId;
              } else {
                selectedDeviceId = videoInputDevices[0].deviceId;
              }
              decodeOnce(codeReader, selectedDeviceId);
            }
          }).catch((err) => {
            console.error(err);
          });
        }

        document.getElementById('startButton').addEventListener('click', () => {
          if (codeReader) {
            codeReader.reset();
            document.getElementById('result').textContent = '';
            startScan(); // Restart the scan
          } else {
            startScan(); // Start the initial scan
          }
        });
      });
    </script>

</div>
<%- include('partials/private-footer.ejs') %>