<%- include("partials/private-header.ejs") %>

<div class="container mt-5">
  <h3>Schedule Search</h3>
  <form id="schedule-form">
    <div class="row">
      <div class="col-12 col-md-3 mb-3">
        <div class="form-icon-container">
          <input class="form-control search-input search datetimepicker flatpickr-input form-icon-input" type="text" id="selectedDate" name="date" placeholder="Select date" data-options='{"disableMobile":false,"allowInput":true, "locale" : { "firstDayOfWeek" : 1}, "mode": "single", "dateFormat": "m/Y","disable": [true]}' />
          <span class="fas fa-calendar text-900 fs-9 form-icon"></span>
        </div>
      </div>
      <div class="col-12 col-md-3">
        <div class="form-floating">
          <select class="form-select" id="floatingSelectTask" name="location" required>
            <option value="Baitul Makmur I">Baitul Makmur I</option>
            <option value="Baitul Makmur II">Baitul Makmur II</option>
            <option value="Jamek Mosque">Jamek Mosque</option>
            <option value="City Mosque">City Mosque</option>
            <option value="Raudhatul Sakinah">Raudhatul Sakinah</option>
          </select>
          <label for="floatingSelectTask">Location</label>
        </div>
      </div>
    </div>
    <button type="button" id="searchButton" class="btn btn-primary">Search</button>
  </form>
  <div id="schedule-results" class="mt-4"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('#schedule-form');
    const selectedDateInput = document.querySelector('#selectedDate');
    const locationSelect = document.querySelector('#floatingSelectTask');
    const searchButton = document.querySelector('#searchButton');

    // Initialize Flatpickr with the specified options
    flatpickr(selectedDateInput, {
      disableMobile: false,
      allowInput: true,
      locale: {
        firstDayOfWeek: 1
      },
      mode: 'single',
      dateFormat: 'm/Y',
      disable: [true] // Add specific dates to disable if needed
    });

    // Fetch schedules based on selected date and location
    function fetchSchedules() {
      const formData = new FormData(form);
      const date = formData.get('date');
      const location = formData.get('location');

      if (date && location) {
        // Convert MM/YYYY to Date range
        const [month, year] = date.split('/').map(Number);
        const startDate = moment().year(year).month(month - 1).startOf('month').utcOffset(8).toDate();
        const endDate = moment().year(year).month(month - 1).endOf('month').utcOffset(8).toDate();

        const queryParams = new URLSearchParams({
          date: startDate.toISOString(),
          location: location
        }).toString();

        console.log('Query Params:', queryParams);

        fetch('/search-schedule-temp', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: queryParams,
          })
          .then(response => response.json())
          .then(data => {
            console.log('Fetch response:', data);
            displaySchedules(data.schedules, data.staffDetails);
          })
          .catch(error => {
            console.error('Fetch error:', error);
          });
      } else {
        const resultContainer = document.getElementById('schedule-results');
        resultContainer.innerHTML = '<p>Please select both date and location.</p>';
      }
    }

    function displaySchedules(schedules, staffDetails) {
      const resultContainer = document.getElementById('schedule-results');
      resultContainer.innerHTML = '';

      if (schedules.length > 0) {
        const ul = document.createElement('ul');
        schedules.forEach(schedule => {
          const li = document.createElement('li');
          li.innerHTML = `
                        <strong>Date:</strong> ${new Date(schedule.date).toDateString()} <br>
                        <strong>Location:</strong> ${schedule.location} <br>
                        <strong>Shift:</strong> ${schedule.shift.join(', ')} <br>
                    `;
          ul.appendChild(li);
        });

        resultContainer.appendChild(ul);

        if (staffDetails.length > 0) {
          const staffContainer = document.createElement('div');
          staffContainer.innerHTML = `
                        <h3>Staff Names with Dates</h3>
                        <ul>
                          ${staffDetails.map(detail => `<li>${detail.name} - ${new Date(detail.date).toDateString()}</li>`).join('')}
                        </ul>
                    `;
          resultContainer.appendChild(staffContainer);
        } else {
          const staffContainer = document.createElement('div');
          staffContainer.innerHTML = '<p>No staff names found.</p>';
          resultContainer.appendChild(staffContainer);
        }
      } else {
        resultContainer.innerHTML = '<p>No schedules found.</p>';
      }
    }

    // Add event listener to the search button
    searchButton.addEventListener('click', fetchSchedules);
  });
</script>


<%- include("partials/private-footer.ejs") %>