<div class="col-12">
  <div class="ms-3" id="staffChart" style="height: 450px; width: 100%;"></div>
</div>

<script>
  // Initialize ECharts instance
  const myChart = echarts.init(document.getElementById('staffChart'));
  // Fetch data from the server using Fetch API
  fetch('/chart/<%= patrolReport._id %>')
    .then(response => response.json())
    .then(data => {
      // Extract data from the response
      const staffNames = data.staffNames;
      const staffPresenceCountsPerCycle = data.staffPresenceCountsPerCycle;
      const totalCycles = data.totalCycles;

      // Create an array to store series data for each staff member
      const seriesData = [];

      // Populate series data for each staff member
      for (let i = 0; i < staffNames.length; i++) {
        const staffName = staffNames[i];
        const seriesItem = {
          name: staffName,
          type: 'line',
          data: [],
          smooth: true,
          label: {
            show: true,
            formatter: params => `${params.value.toFixed(0)}`,
            color: '#3874ff', // Display percentage value on the chart
          },
        };

        // Populate data for each cycle
        for (let j = 0; j < totalCycles; j++) {
          seriesItem.data.push(staffPresenceCountsPerCycle[j][i]);
        }

        seriesData.push(seriesItem);
      }

      // Configure ECharts options
      const options = {
        legend: {
          data: staffNames,
        },
        xAxis: {
          type: 'category',
          data: Array.from({
            length: totalCycles
          }, (_, index) => `Cycle ${index + 1}`),
        },
        yAxis: {
          type: 'value',
          splitLine: {
            show: false, // Hide the horizontal grid lines on the Y-axis
          },
        },
        series: seriesData,
      };

      // Set ECharts options and render the chart
      myChart.setOption(options);
    })
    .catch(error => console.error('Error fetching data from the server:', error));
</script>

<!-- Create a container for the chart -->
<div id="echartsContainer1" style="width: 100%; height: 500px;"></div>

<script>
  // Fetch data from the server using the Fetch API
  fetch('/api/patrolData/<%= patrolReport._id %>')
    .then(response => response.json())
    .then(data => {
      // Process data and create ECharts doughnut chart

      // Extract checkpoint names and percentage data
      const checkpointNames = Object.keys(data.checkpointPercentageData);
      const percentageData = checkpointNames.map(name => data.checkpointPercentageData[name].percentage);

      // Create ECharts doughnut chart
      const echartsContainer1 = document.getElementById('echartsContainer1');
      const myChart3 = echarts.init(echartsContainer1);

      const options = {
        title: {
          subtext: `Total Percentage of All Checkpoint: ${data.percentage.toFixed(2)}%`,
          left: 'center',
          top: 15,
          subtextStyle: {
            color: '#3874ff', // Change font color to #3874ff
          },
        },
        legend: {
          orient: 'vertical',
          right: 10,
          top: 20,
          bottom: 20,
          data: checkpointNames,
          textStyle: {
            color: '#3874ff', // Change font color to #3874ff
          },
          show: false
        },
        series: [{
          name: 'Percentage',
          type: 'pie',
          radius: ['50%', '70%'],
          avoidLabelOverlap: false,
          label: {
            show: true,
            position: 'outside',
            formatter: '{b}: {d}%',
            color: '#3874ff' // Display the name and percentage value outside the doughnut
          },
          emphasis: {
            label: {
              show: true,
              fontSize: '20',
              fontWeight: 'bold',
            },
          },
          labelLine: {
            show: true,
            length: 10,
            length2: 10,
          },
          itemStyle: {
            borderRadius: 8, // Set the border radius for a rounded appearance
            borderColor: '#fff',
            borderWidth: 2,
          },
          data: checkpointNames.map((name, index) => ({
            name,
            value: percentageData[index],
          })),
        }],
      };

      myChart3.setOption(options);
    })
    .catch(error => console.error('Error fetching data:', error));
</script>

<div class="col-12 mb-3">
  <div class="ms-3" id="chart" style="height: 450px; width: 100%;"></div>
</div>

<script>
  // Fetch ECharts data from the server
  fetch('/shift-member/echarts-data/<%= patrolReport._id %>') // Replace 'your_report_id' with the actual report ID
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const echartsData = data.data;

        const chart = echarts.init(document.getElementById('chart'));

        // ECharts option configuration
        const option = {
          xAxis: {
            type: 'category',
            data: echartsData.cycle.map(cycle => cycle.timeSlot),
          },
          yAxis: {
            type: 'value',
            axisLabel: {
              formatter: '{value}%', // Display percentage symbol on the Y-axis
            },
            splitLine: {
              show: false, // Hide the horizontal grid lines on the Y-axis
            },
          },
          series: [{
            data: echartsData.cycle.map(cycle => cycle.percentageWithTime),
            type: 'line',
            smooth: true,
            label: {
              show: true,
              formatter: params => `${params.value.toFixed(0)}%`,
              color: '#3874ff', // Display percentage value on the chart
            },
          }],
        };

        // Set option and render chart
        chart.setOption(option);
      } else {
        console.error('Error fetching ECharts data:', data.error);
      }
    })
    .catch(error => console.error('Error fetching data:', error));
</script>