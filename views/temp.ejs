<%- include('partials/private-header') %>

<div class="mb-3 mt-3">

  <style>
    .qr-code-container {
      max-width: 100%;
      /* Ensure the container does not exceed the viewport width */
    }

    #qrCode {
      width: 100%;
      /* Initially set the image width to 100% */
      height: auto;
      /* Maintain aspect ratio */
    }

    /* Media queries for different viewport sizes */
    @media screen and (min-width: 768px) {
      #qrCode {
        width: 50%;
        /* Adjust the width for larger screens */
      }
    }

    @media screen and (min-width: 1024px) {
      #qrCode {
        width: 30%;
        /* Adjust the width for even larger screens */
      }
    }
  </style>

  <div class="qr-code-container">
    <img id="qrCode">
  </div>




  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let previousQRData = null;

      async function updateQRCode() {
        try {
          // Generate a new QR code
          const response = await fetch('/generate-qr');
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          const data = await response.json();

          // Update the src attribute of the QR code image
          document.getElementById('qrCode').src = data.qrCodeImage;

          // Save the previous QR code data
          if (previousQRData) {
            await saveQRData(previousQRData);
          }

          // Update the previous QR data to the new one
          previousQRData = data.uniqueIdentifier;

          console.log('QR code updated successfully');
        } catch (error) {
          console.error('Error updating QR code:', error);
        }
      }

      // Function to update QR code image every 5 seconds
      setInterval(updateQRCode, 5000);

      async function saveQRData(qrData) {
        try {
          // Perform any actions to save the QR code data here
          console.log('Saving QR code data:', qrData);

          const response = await fetch('/save-qr-data', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              qrData: qrData
            })
          });

          if (!response.ok) {
            throw new Error('Network response was not ok');
          }

          console.log('QR code data successfully saved');
        } catch (error) {
          console.error('Error saving QR code data:', error);
        }
      }
      
    });
  </script>
</div>

<%- include('partials/private-footer.ejs') %>