<%- include('partials/private-header') %>

<div class="mb-3 mt-3">

  <style>
    .qr-code-container {
      max-width: 100%;
      /* Ensure the container does not exceed the viewport width */
    }

    #qrCode {
      width: 100%;
      /* Initially set the image width to 100% */
      height: auto;
      /* Maintain aspect ratio */
    }

    /* Media queries for different viewport sizes */
    @media screen and (min-width: 768px) {
      #qrCode {
        width: 70%;
        /* Adjust the width for larger screens */
      }
    }

    @media screen and (min-width: 1024px) {
      #qrCode {
        width: 50%;
        /* Adjust the width for even larger screens */
      }
    }
  </style>

  <div class="mb-6">
    <div class="mb-3">
      <h2 class="mb-2">Attendance</h2>
      <h5 class="text-body-tertiary fw-semibold">Regular presence of employees during work hours.</h5>
    </div>

    <div class="row gy-3 gx-6">

      <div class="col-12 col-xxl-6">
        <div class="qr-code-container text-center p-4 border border-gray rounded-3">
          <img id="qrCode" class="w-100">
        </div>
      </div>

      <div class="col-12 col-xxl-6">
        <div id="team-members" data-list='{"valueNames":["member","position","activity","when","taskprogress","status","action"],"pagination":false}'>
          <div class="row align-items-end justify-content-between pb-4 g-3">

            <div class="col-auto">
              <h3 id="currentTime"></h3>

              <script>
                function updateTime() {
                  // Create a new Date object to get the current time
                  var currentTime = new Date();

                  // Get the hours, minutes, and seconds
                  var hours = currentTime.getHours();
                  var minutes = currentTime.getMinutes();
                  var seconds = currentTime.getSeconds();

                  // Add leading zeros if the numbers are less than 10
                  hours = (hours < 10) ? '0' + hours : hours;
                  minutes = (minutes < 10) ? '0' + minutes : minutes;
                  seconds = (seconds < 10) ? '0' + seconds : seconds;

                  // Construct the time string in HH:MM:SS format
                  var timeString = hours + ':' + minutes + ':' + seconds;

                  // Update the content of the <h3> element with the current time
                  document.getElementById('currentTime').textContent = timeString;
                }

                // Call updateTime function initially to set the time immediately
                updateTime();

                // Update the time every second
                setInterval(updateTime, 1000);
              </script>
            </div>

            <div class="col-12 col-md-auto">
              <div class="">

                <% 
                
                var currentDate = new Date();

                // Get the day of the week, day of the month, month, and year
                var dayOfWeek = currentDate.toLocaleDateString('en-US', { weekday: 'long' });
                var dayOfMonth = currentDate.toLocaleDateString('en-US', { day: '2-digit' });
                var month = currentDate.toLocaleDateString('en-US', { month: 'long' });
                var year = currentDate.toLocaleDateString('en-US', { year: 'numeric' });

                // Construct the formatted date string
                var formattedDate = dayOfWeek + ", " + dayOfMonth + " " + month + " " + year;

                %>

                <h3><%= formattedDate %></h3>

              </div>
            </div>

          </div>
          <div class="table-responsive ms-n1 ps-1">
            <table class="table fs-9 mb-0 border-top border-translucent">
              <thead>
                <tr>
                  <th class="sort white-space-nowrap align-middle ps-0" scope="col" data-sort="member" style="width:15%;">MEMBERS</th>
                  <th class="sort align-middle ps-3" scope="col" data-sort="position" style="width:20%;">DATE TIME</th>
                  <th class="sort align-middle text-center" scope="col" data-sort="status" style="width:15%;">USER STATUS</th>
                </tr>
              </thead>
              <tbody class="list scrollbar overflow-y-auto overflow-x-hidden" id="project-summary-table-body">

                <tr class="position-static">

                </tr>

              </tbody>
            </table>
          </div>
        </div>
      </div>

    </div>

  </div>




  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let previousQRData = null;

      async function updateQRCode() {
        try {
          // Generate a new QR code
          const response = await fetch('/generate-qr');
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          const data = await response.json();

          // Update the src attribute of the QR code image
          document.getElementById('qrCode').src = data.qrCodeImage;

          // Save the previous QR code data
          if (previousQRData) {
            await saveQRData(previousQRData);
          }

          // Update the previous QR data to the new one
          previousQRData = data.uniqueIdentifier;

          console.log('QR code updated successfully');
        } catch (error) {
          console.error('Error updating QR code:', error);
        }
      }

      updateQRCode();

      // Function to update QR code image every 5 seconds
      setInterval(updateQRCode, 5000);

      async function saveQRData(qrData) {
        try {
          // Perform any actions to save the QR code data here
          console.log('Saving QR code data:', qrData);

          const response = await fetch('/save-qr-data', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              qrData: qrData
            })
          });

          if (!response.ok) {
            throw new Error('Network response was not ok');
          }

          console.log('QR code data successfully saved');
        } catch (error) {
          console.error('Error saving QR code data:', error);
        }
      }

    });
  </script>
</div>

<%- include('partials/private-footer.ejs') %>