<%- include("partials/private-header.ejs") %>

<div class="mb-3">

  <i class="fa fa-hourglass-3" aria-hidden="true"></i>Web Push Notifications</h3>
  <button class="btn btn-primary" id="subscribeBtn">Subscribe to Notifications</button>
  <button class="btn btn-danger" id="sendNotificationBtn">Send Notifications</button>

  <script>
    const userId = '<%= user._id %>'; // Pass the logged-in user's ID

    // Convert VAPID key to Uint8Array
    function urlBase64ToUint8Array(base64String) {
      const padding = '='.repeat((4 - base64String.length % 4) % 4);
      const base64 = (base64String + padding).replace(/\-/g, '+').replace(/_/g, '/');
      const rawData = window.atob(base64);
      return Uint8Array.from([...rawData].map(char => char.charCodeAt(0)));
    }

    // Function to check if the user is already subscribed
    async function checkSubscription() {
      if ('serviceWorker' in navigator && 'PushManager' in window) {
        const registration = await navigator.serviceWorker.ready;
        const subscription = await registration.pushManager.getSubscription();

        if (subscription) {
          const subscriptionJson = {
            endpoint: subscription.endpoint,
            expirationTime: subscription.expirationTime,
            keys: {
              p256dh: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey('p256dh')))),
              auth: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey('auth'))))
            },
            userId: userId
          };

          return fetch('/check-subscription', {
              method: 'POST',
              body: JSON.stringify(subscriptionJson),
              headers: {
                'Content-Type': 'application/json'
              }
            }).then(res => res.json())
            .then(data => {
              return data.isSubscribed;
            })
            .catch(err => {
              console.error('Error checking subscription:', err);
              return false;
            });
        }
      }
      return false;
    }

    document.getElementById('subscribeBtn').addEventListener('click', async () => {
      if (await checkSubscription()) {
        console.log('Already subscribed.');
        return;
      }

      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/service-worker.js')
          .then(registration => {
            return fetch('/vapidPublicKey')
              .then(res => res.text())
              .then(vapidPublicKey => {
                const convertedVapidKey = urlBase64ToUint8Array(vapidPublicKey);
                return registration.pushManager.subscribe({
                  userVisibleOnly: true,
                  applicationServerKey: convertedVapidKey
                });
              })
              .then(subscription => {
                // Ensure subscription object is correctly serialized
                const subscriptionJson = {
                  endpoint: subscription.endpoint,
                  expirationTime: subscription.expirationTime,
                  keys: {
                    p256dh: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey('p256dh')))),
                    auth: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey('auth'))))
                  },
                  userId: userId
                };

                return fetch('/subscribe', {
                  method: 'POST',
                  body: JSON.stringify(subscriptionJson),
                  headers: {
                    'Content-Type': 'application/json'
                  }
                });
              })
              .then(response => response.json())
              .then(data => console.log('Subscribed:', data))
              .catch(err => console.error('Error subscribing:', err));
          });
      } else {
        console.error('Service workers are not supported by this browser.');
      }
    });

    // Send a test notification
    document.getElementById('sendNotificationBtn').addEventListener('click', () => {
      fetch('/sendNotification', {
          method: 'POST',
          body: JSON.stringify({
            recipientId: '<%= "66b026070e3ea6976ab607aa" %>', // Replace with recipient ID
            message: 'This is a test notification!',
            url: 'https://www.lakmnsportal.com' // URL to navigate to when notification is clicked
          }),
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => console.log('Notification sent:', data))
        .catch(err => console.error('Error sending notification:', err));
    });
  </script>

</div>

<%- include("partials/private-footer.ejs") %>